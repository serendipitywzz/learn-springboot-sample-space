<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 【Mapper映射】定义映射文件与Mapper接口的对应关系，eg: 将UserDao.xml的namespace与对应的UserDao接口类之间的关系定义出来-->
<mapper namespace="ink.openmind.springbootsamplemybatislearnproject.dao.IUserDao">
    <!-- 【结果映射】配置表结构和实体类的对应关系 -->
    <resultMap type="ink.openmind.springbootsamplemybatislearnproject.entity.User" id="UserResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
    </resultMap>

    <select id="findAllUsers" resultMap="UserResult">
        SELECT id,name,password FROM tb_user;
    </select>

    <insert id="insertUser" parameterType="ink.openmind.springbootsamplemybatislearnproject.entity.User">
        INSERT INTO tb_user(name,password) VALUE (#{name},#{password})
    </insert>

    <update id="updateUser" parameterType="ink.openmind.springbootsamplemybatislearnproject.entity.User">
        UPDATE tb_user
        SET
        name=#{name},password=#{password}
        WHERE id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        DELETE FROM tb_user
        WHERE id = #{id}
    </delete>

</mapper>